---
- hosts: all
  sudo: yes
  tasks:
    - name: Add apt keys
      apt_key: url={{item}}
      with_items:
        - https://www.postgresql.org/media/keys/ACCC4CF8.asc
        - https://deb.nodesource.com/gpgkey/nodesource.gpg.key
    - name: Add PPAs
      apt_repository: repo="{{item}}"
      with_items:
        - "deb https://deb.nodesource.com/node_0.12 trusty main"
        - "deb http://apt.postgresql.org/pub/repos/apt/ trusty-pgdg main"
    - name: Update apt cache
      apt: update_cache=yes
    - name: Install dev tools
      apt: name={{item}} state=present
      with_items:
        - build-essential
        - git
        - python3
        - python3-pip
        - libyaml-dev
    - name: Install build dependencies
      apt: name={{item}} state=build-dep
      register: deps_result
      changed_when: "'will be installed' in deps_result.stdout"
      with_items:
        - python3-pandas
        - python3-numpy
    - name: Install PostgreSQL
      apt: name={{item}} state=present
      with_items:
        - postgresql-9.4
        - postgresql-client-9.4
        - postgresql-contrib-9.4
        - postgresql-server-dev-9.4
        - libpq-dev
        - postgresql-9.4-postgis-2.1
        - postgresql-9.4-postgis-scripts
        - python-psycopg2
    - name: Install Node
      apt: name=nodejs state=present
    - name: Install bower
      npm: name=bower global=yes
    - name: Check if packages need to be autoremoved
      command: apt-get --dry-run autoremove
      register: check_autoremove
      changed_when: False
    - name: Autoremove unused packages
      command: apt-get -y autoremove
      when: "'packages will be REMOVED' in check_autoremove.stdout"
    - name: "Add bashrc"
      template: src=files/bashrc dest=/home/vagrant/.bashrc owner=vagrant
    - name: "pip install"
      pip: executable=pip3 requirements=/vagrant/requirements.txt
    - name: Install Nginx
      apt: name=nginx state=present
    - name: Copy Nginx Configuration
      copy: src=files/cfs.nginx.conf dest=/etc/nginx/sites-available/cfs.nginx.conf force=yes
    - name: Remove Nginx default configuration
      file: path=/etc/nginx/sites-enabled/default state=absent
    - name: Setup Ngix proxy
      file: src=/etc/nginx/sites-available/cfs.nginx.conf dest=/etc/nginx/sites-enabled/cfs.nginx.conf state=link
- hosts: all
  become: yes
  become_method: sudo
  become_user: postgres
  tasks:
    - name: Configure PostgreSQL
      copy: src=files/postgresql.conf dest=/etc/postgresql/9.4/main/postgresql.conf owner=postgres group=postgres force=yes
      notify:
        - Restart Postgres
    - name: Configure PostgreSQL Auth
      copy: src=files/pg_hba.conf dest=/etc/postgresql/9.4/main/pg_hba.conf owner=postgres group=postgres force=yes
      notify:
        - Restart Postgres
    - name: "Create datascientist user for Postgres"
      postgresql_user: name=datascientist password=1234thumbwar role_attr_flags=CREATEDB
    - name: "Create Vagrant user for Postgres"
      postgresql_user: name=vagrant role_attr_flags=CREATEDB,CREATEROLE,SUPERUSER
    - name: "Create PostgreSQL databases"
      postgresql_db: name=cfs owner=datascientist state=present
    - name: "Add PostGIS"
      postgresql_ext: name=postgis db=cfs
  handlers:
    - name: Restart Postgres
      sudo: yes
      service: name=postgresql state=restarted
    - name: Restart Nginx
      sudo: yes
      service: name=nginx state=restarted
