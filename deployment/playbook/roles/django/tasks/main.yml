---
- become_user: "{{ project.user }}"
  block:
  - name: Pull sources from the repository
    git: >
      repo="{{ repo.url }}"
      dest="{{ project.srcroot }}/"
      version="{{ repo.branch }}"
      force=yes
      update=yes
      accept_hostkey=yes
    tags:
      - deploy

  - name: Manually create the initial virtualenv
    command: >
      virtualenv {{ project.virtualenv }} -p python3.4
      creates="{{ project.virtualenv }}"
    tags:
      - deploy
      - pip

  - name: Install requirements with pip
    pip: >
      requirements="{{ project.root }}src/requirements.txt"
      virtualenv="{{ project.virtualenv }}"
    tags:
      - deploy
      - pip

  - name: Create Django database settings module
    template: >
      src=webapp_credentials.py.j2
      dest={{ django.root }}webapp_credentials.py
    tags:
      - deploy

  - name: Migrate Django database
    django_manage: >
      command=migrate
      app_path={{ django.root }}
      settings={{ django.settings }}
      virtualenv={{ project.virtualenv }}
    tags:
      - deploy

  - name: Install assets
    npm: path={{ project.srcroot }} production=no
    tags:
      - deploy
      - assets

  - name: Compress assets
    command: webpack --config webpack.production.config.js chdir={{ project.srcroot }}
    tags:
      - deploy
      - assets

  - name: Collect assets
    django_manage: >
      command=collectstatic
      app_path={{ django.root }}
      settings={{ django.settings }}
      virtualenv={{ project.virtualenv }}
    tags:
      - deploy
      - assets

- name: Create gunicorn upstart service
  template: src=gunicorn.conf.j2 dest=/etc/init/gunicorn.conf
  tags:
    - deploy

- name: Make sure gunicorn is running
  service: name=gunicorn enabled=yes state=restarted
  tags:
    - deploy
